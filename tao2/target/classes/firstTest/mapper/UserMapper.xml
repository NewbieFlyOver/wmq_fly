<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="firstTest.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="firstTest.dto.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userAccount" jdbcType="VARCHAR" property="userAccount" />
    <result column="userPassword" jdbcType="VARCHAR" property="userPassword" />
    <result column="userIcon" jdbcType="VARCHAR" property="userIcon" />
    <result column="userGender" jdbcType="VARCHAR" property="userGender" />
    <result column="userBirthDate" jdbcType="VARCHAR" property="userBirthDate" />
    <result column="userRealName" jdbcType="VARCHAR" property="userRealName" />
    <result column="userCash" jdbcType="DECIMAL" property="userCash" />
    <result column="userPhone" jdbcType="VARCHAR" property="userPhone" />
    <result column="userAlipayAccount" jdbcType="VARCHAR" property="userAlipayAccount" />
    <result column="userWechatAccount" jdbcType="VARCHAR" property="userWechatAccount" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modifyTime" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userAccount, userPassword, userIcon, userGender, userBirthDate, userRealName, 
    userCash, userPhone, userAlipayAccount, userWechatAccount, createTime, modifyTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="firstTest.dto.User">
    insert into user (id, userAccount, userPassword, 
      userIcon, userGender, userBirthDate, 
      userRealName, userCash, userPhone, 
      userAlipayAccount, userWechatAccount, createTime, 
      modifyTime)
    values (#{id,jdbcType=INTEGER}, #{userAccount,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userIcon,jdbcType=VARCHAR}, #{userGender,jdbcType=VARCHAR}, #{userBirthDate,jdbcType=VARCHAR}, 
      #{userRealName,jdbcType=VARCHAR}, #{userCash,jdbcType=DECIMAL}, #{userPhone,jdbcType=VARCHAR}, 
      #{userAlipayAccount,jdbcType=VARCHAR}, #{userWechatAccount,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{modifyTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="firstTest.dto.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userAccount != null">
        userAccount,
      </if>
      <if test="userPassword != null">
        userPassword,
      </if>
      <if test="userIcon != null">
        userIcon,
      </if>
      <if test="userGender != null">
        userGender,
      </if>
      <if test="userBirthDate != null">
        userBirthDate,
      </if>
      <if test="userRealName != null">
        userRealName,
      </if>
      <if test="userCash != null">
        userCash,
      </if>
      <if test="userPhone != null">
        userPhone,
      </if>
      <if test="userAlipayAccount != null">
        userAlipayAccount,
      </if>
      <if test="userWechatAccount != null">
        userWechatAccount,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="modifyTime != null">
        modifyTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userAccount != null">
        #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userBirthDate != null">
        #{userBirthDate,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userCash != null">
        #{userCash,jdbcType=DECIMAL},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userAlipayAccount != null">
        #{userAlipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="userWechatAccount != null">
        #{userWechatAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByUserId" parameterType="firstTest.dto.User">
    update user
    <set>
      <if test="userAccount != null">
        userAccount = #{userAccount,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        userPassword = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userIcon != null">
        userIcon = #{userIcon,jdbcType=VARCHAR},
      </if>
      <if test="userGender != null">
        userGender = #{userGender,jdbcType=VARCHAR},
      </if>
      <if test="userBirthDate != null">
        userBirthDate = #{userBirthDate,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null">
        userRealName = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userCash != null">
        userCash = #{userCash,jdbcType=DECIMAL},
      </if>
      <if test="userPhone != null">
        userPhone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userAlipayAccount != null">
        userAlipayAccount = #{userAlipayAccount,jdbcType=VARCHAR},
      </if>
      <if test="userWechatAccount != null">
        userWechatAccount = #{userWechatAccount,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modifyTime = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="firstTest.dto.User">
    update user
    set userAccount = #{userAccount,jdbcType=VARCHAR},
      userPassword = #{userPassword,jdbcType=VARCHAR},
      userIcon = #{userIcon,jdbcType=VARCHAR},
      userGender = #{userGender,jdbcType=VARCHAR},
      userBirthDate = #{userBirthDate,jdbcType=VARCHAR},
      userRealName = #{userRealName,jdbcType=VARCHAR},
      userCash = #{userCash,jdbcType=DECIMAL},
      userPhone = #{userPhone,jdbcType=VARCHAR},
      userAlipayAccount = #{userAlipayAccount,jdbcType=VARCHAR},
      userWechatAccount = #{userWechatAccount,jdbcType=VARCHAR},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      modifyTime = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <select id="selectByUserPhone" parameterType="java.lang.String" resultMap="BaseResultMap">
  	select 
  	<include refid="Base_Column_List" /> 
  	from`user` u where u.userPhone = #{userPhone}
  </select>
  
  <select id="selectByUPassworAndPhone" parameterType="firstTest.dto.User" resultType="java.lang.Integer">
  	select count(*) from`user` u where u.userPhone = #{userPhone} and u.userPassword = #{userPassword}
  </select>
  
  <select id="selectByOldPasswordAndAccount" parameterType="firstTest.dto.User" resultType="java.lang.Integer">
  	select count(*) from `user` where userPassword = #{userOldPassword}  and userPhone=#{userPhone}
  </select>
  
  <update id="updatePasswordByAccount" parameterType="firstTest.dto.User">
  	update `user` set userPassword = #{userPassword} where userPhone = #{userPhone}
  </update>
  
    <update id="updatePasswordByOldPassword" parameterType="firstTest.dto.User">
  	update `user` set userPassword = #{userPassword} 
  	where userPassword = #{userOldPassword} 
  	and userPhone=#{userPhone}
  </update>
  
  
  
  
</mapper>